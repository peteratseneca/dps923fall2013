{\rtf1\ansi\ansicpg1252\cocoartf1187
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs28 \cf0 \
This is the "CD 4 M-M +" example app. \
\
It was created with Xcode 4.4 for iOS 5.1 SDK in August 2012.\
\
This is based on the CD 4 M-M example app. It adds the ability to edit the initial data. The user can add and configure new "apps" and "topics". \
\
There are two patterns here. \
One is a pattern you've seen before. We add a + button to the table view nav bar, and a controller, to enable the user to add new items to the Apps and Topics lists. \
The other will enable the user to configure the "topics" collection for a specific "app" (or the "apps" collection for a "topic"). We'll use a modal multi-select table for that. \
\
Here's what I did to add on to the base app:\
1. Add view controllers and scenes to support the creation of new apps and topics \
2. Add view controllers and scenes to support the configuration of app or topic collections (for a specific topic or app)\
3. Edit the existing app or topic view scene, to support the transition to collection editing\
\
From AppView, the user can go to two tasks:\
1. Edit the app that they're viewing (its name, theme, week, sequence)\
2. Edit the app's collection of topic objects\
\
Task 1 goes to the AppEdit controller, passing it a reference to the app that's being viewed. \
You've seen and used the AppEdit controller before, to create new app objects.\
The AppEdit controller will extract the app's data values (name, theme, week, sequence), and configure the user interface. \
\
Task 2 goes to the AppTopicsEdit controller. It uses a multi-select table (which you've seen before).\
When the user interacts with the table, their actions update the data store.\
Therefore, when calling back to the delegate (i.e. when the Done button is tapped), the delegate rebuilds the picker view and dismisses the AppTopicsEdit controller.\
\
Similarly...\
\
From TopicView, the user can go to two tasks:\
1. Edit the topic that they're viewing (its name, description, order/sequence number)\
2. Edit the topic's collection of app objects\
\
Same pattern as above.\
\
\
\
\
\
\
\
~~~~~ \
\
How to use this project as a "template" for your own...\
1) Duplicate\
2) Rename the project\
3) Rename the scheme\
\
1) Duplicate...\
In Finder, select this project's folder\
Command+D to duplicate\
Then, rename the folder to your desired name\
\
2) Rename the project...\
Open the project file in Xcode\
In the Project Navigator, select the project file (it has a blue icon)\
Press the tab key, and type your new name\
You will be prompted through the rename procedure\
\
3) Rename the scheme...\
Click the scheme (which will still display "Classes"), and choose Manage Schemes...\
Select the scheme (on the list), and then press the tab key until you are able to edit the name of the scheme\
Type the new name (to match the new name for the project) \
\
~~~~~ \
\
Next...\
}